file,method_name,new_method_name,start_line,end_line,original_code,code,var
./django/core/servers/basehttp.py,cleanup_headers,adjust_headers_for_connection_handling,131,144,"def cleanup_headers(self):
    super().cleanup_headers()
    if 'Content-Length' not in self.headers:
        self.headers['Connection'] = 'close'
    elif not isinstance(self.request_handler.server, socketserver.ThreadingMixIn):
        self.headers['Connection'] = 'close'
    if self.headers.get('Connection') == 'close':
        self.request_handler.close_connection = True","def adjust_headers_for_connection_handling(self):
    super().cleanup_headers()
    if 'Content-Length' not in self.headers:
        self.headers['Connection'] = 'close'
    elif not isinstance(self.request_handler.server, socketserver.ThreadingMixIn):
        self.headers['Connection'] = 'close'
    if self.headers.get('Connection') == 'close':
        self.request_handler.close_connection = True",[]
./django/core/servers/basehttp.py,log_message,log_http_request_status,158,187,"def log_message(self, format, *args):
    extra = {'request': self.request, 'server_time': self.log_date_time_string()}
    if args[1][0] == '4':
        if args[0].startswith('\x16\x03'):
            extra['status_code'] = 500
            logger.error(""You're accessing the development server over HTTPS, but it only supports HTTP."", extra=extra)
            return
    if args[1].isdigit() and len(args[1]) == 3:
        status_code = int(args[1])
        extra['status_code'] = status_code
        if status_code >= 500:
            level = logger.error
        elif status_code >= 400:
            level = logger.warning
        else:
            level = logger.info
    else:
        level = logger.info
    level(format, *args, extra=extra)","def log_http_request_status(self, format, *args):
    extra = {'request': self.request, 'server_time': self.log_date_time_string()}
    if args[1][0] == '4':
        if args[0].startswith('\x16\x03'):
            extra['status_code'] = 500
            logger.error(""You're accessing the development server over HTTPS, but it only supports HTTP."", extra=extra)
            return
    if args[1].isdigit() and len(args[1]) == 3:
        status_code = int(args[1])
        extra['status_code'] = status_code
        if status_code >= 500:
            level = logger.error
        elif status_code >= 400:
            level = logger.warning
        else:
            level = logger.info
    else:
        level = logger.info
    level(format, *args, extra=extra)","[{""var"": ""extra"", ""rename"": ""logging_context""}, {""var"": ""status_code"", ""rename"": ""http_response_status_code""}, {""var"": ""level"", ""rename"": ""log_level_function""}]"
