file,method_name,new_method_name,start_line,end_line,original_code,code,var
./src/_pytest/pastebin.py,create_new_paste,generate_bpaste_link,65,91,"def create_new_paste(contents):
    """"""
    Creates a new paste using bpaste.net service.

    :contents: paste contents as utf-8 encoded bytes
    :returns: url to the pasted contents
    """"""
    import re
    if sys.version_info < (3, 0):
        from urllib import urlopen, urlencode
    else:
        from urllib.request import urlopen
        from urllib.parse import urlencode
    params = {'code': contents, 'lexer': 'python3' if sys.version_info[0] >= 3 else 'python', 'expiry': '1week'}
    url = 'https://bpaste.net'
    response = urlopen(url, data=urlencode(params).encode('ascii')).read()
    m = re.search('href=""/raw/(\\w+)""', response.decode('utf-8'))
    if m:
        return '%s/show/%s' % (url, m.group(1))
    else:
        return 'bad response: ' + response","def generate_bpaste_link(contents):
    """"""
    Creates a new paste using bpaste.net service.

    :contents: paste contents as utf-8 encoded bytes
    :returns: url to the pasted contents
    """"""
    import re
    if sys.version_info < (3, 0):
        from urllib import urlopen, urlencode
    else:
        from urllib.request import urlopen
        from urllib.parse import urlencode
    params = {'code': contents, 'lexer': 'python3' if sys.version_info[0] >= 3 else 'python', 'expiry': '1week'}
    url = 'https://bpaste.net'
    response = urlopen(url, data=urlencode(params).encode('ascii')).read()
    m = re.search('href=""/raw/(\\w+)""', response.decode('utf-8'))
    if m:
        return '%s/show/%s' % (url, m.group(1))
    else:
        return 'bad response: ' + response","[{""var"": ""url"", ""rename"": ""paste_link""}, {""var"": ""response"", ""rename"": ""paste_creation_response""}, {""var"": ""m"", ""rename"": ""paste_id_match""}, {""var"": ""params"", ""rename"": ""paste_parameters""}]"
