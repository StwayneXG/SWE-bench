file,method_name,new_method_name,start_line,end_line,original_code,code,var
./xarray/coding/variables.py,decode,handle_unsigned_integer_decoding,305,327,"def decode(self, variable, name=None):
    dims, data, attrs, encoding = unpack_for_decoding(variable)
    if '_Unsigned' in attrs:
        unsigned = pop_to(attrs, encoding, '_Unsigned')
        if data.dtype.kind == 'i':
            if unsigned == 'true':
                unsigned_dtype = np.dtype('u%s' % data.dtype.itemsize)
                transform = partial(np.asarray, dtype=unsigned_dtype)
                data = lazy_elemwise_func(data, transform, unsigned_dtype)
                if '_FillValue' in attrs:
                    new_fill = unsigned_dtype.type(attrs['_FillValue'])
                    attrs['_FillValue'] = new_fill
        else:
            warnings.warn('variable %r has _Unsigned attribute but is not of integer type. Ignoring attribute.' % name, SerializationWarning, stacklevel=3)
    return Variable(dims, data, attrs, encoding)","def handle_unsigned_integer_decoding(self, variable, name=None):
    dims, data, attrs, encoding = unpack_for_decoding(variable)
    if '_Unsigned' in attrs:
        unsigned = pop_to(attrs, encoding, '_Unsigned')
        if data.dtype.kind == 'i':
            if unsigned == 'true':
                unsigned_dtype = np.dtype('u%s' % data.dtype.itemsize)
                transform = partial(np.asarray, dtype=unsigned_dtype)
                data = lazy_elemwise_func(data, transform, unsigned_dtype)
                if '_FillValue' in attrs:
                    new_fill = unsigned_dtype.type(attrs['_FillValue'])
                    attrs['_FillValue'] = new_fill
        else:
            warnings.warn('variable %r has _Unsigned attribute but is not of integer type. Ignoring attribute.' % name, SerializationWarning, stacklevel=3)
    return Variable(dims, data, attrs, encoding)","[{""var"": ""new_fill"", ""rename"": ""unsigned_fill_value""}, {""var"": ""data"", ""rename"": ""decoded_variable_data""}, {""var"": ""encoding"", ""rename"": ""decoding_metadata""}, {""var"": ""transform"", ""rename"": ""unsigned_data_cast_function""}, {""var"": ""unsigned"", ""rename"": ""unsigned_attribute_value""}, {""var"": ""dims"", ""rename"": ""dimension_labels""}, {""var"": ""attrs"", ""rename"": ""attributes_metadata""}, {""var"": ""unsigned_dtype"", ""rename"": ""unsigned_integer_dtype""}]"
