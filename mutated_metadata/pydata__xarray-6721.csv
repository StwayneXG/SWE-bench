file,method_name,new_method_name,start_line,end_line,original_code,code,var
./xarray/core/common.py,get_chunksizes,determine_consistent_chunk_sizes,2020,2034,"def get_chunksizes(variables: Iterable[Variable]) -> Mapping[Any, tuple[int, ...]]:
    chunks: dict[Any, tuple[int, ...]] = {}
    for v in variables:
        if hasattr(v.data, 'chunks'):
            for dim, c in v.chunksizes.items():
                if dim in chunks and c != chunks[dim]:
                    raise ValueError(f'Object has inconsistent chunks along dimension {dim}. This can be fixed by calling unify_chunks().')
                chunks[dim] = c
    return Frozen(chunks)","def determine_consistent_chunk_sizes(variables: Iterable[Variable]) -> Mapping[Any, tuple[int, ...]]:
    chunks: dict[Any, tuple[int, ...]] = {}
    for v in variables:
        if hasattr(v.data, 'chunks'):
            for dim, c in v.chunksizes.items():
                if dim in chunks and c != chunks[dim]:
                    raise ValueError(f'Object has inconsistent chunks along dimension {dim}. This can be fixed by calling unify_chunks().')
                chunks[dim] = c
    return Frozen(chunks)","[{""var"": ""dim"", ""rename"": ""dimension_label""}, {""var"": ""v"", ""rename"": ""variable""}, {""var"": ""chunks"", ""rename"": ""dimension_chunk_sizes_map""}, {""var"": ""c"", ""rename"": ""current_chunksize""}]"
