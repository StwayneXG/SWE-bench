file,method_name,new_method_name,start_line,end_line,original_code,code,var
./django/contrib/admin/options.py,has_add_permission,determine_add_permission_with_auto_check,2114,2121,"def has_add_permission(self, request, obj):
    if self.opts.auto_created:
        return self.has_view_permission(request, obj)
    return super().has_add_permission(request)","def determine_add_permission_with_auto_check(self, request, obj):
    if self.opts.auto_created:
        return self.has_view_permission(request, obj)
    return super().has_add_permission(request)",[]
./django/contrib/admin/options.py,has_change_permission,check_and_delegate_change_permission,2123,2130,"def has_change_permission(self, request, obj=None):
    if self.opts.auto_created:
        return self.has_view_permission(request, obj)
    return super().has_change_permission(request)","def check_and_delegate_change_permission(self, request, obj=None):
    if self.opts.auto_created:
        return self.has_view_permission(request, obj)
    return super().has_change_permission(request)",[]
./django/contrib/admin/options.py,has_delete_permission,determine_delete_permission_based_on_creation_status,2132,2139,"def has_delete_permission(self, request, obj=None):
    if self.opts.auto_created:
        return self.has_view_permission(request, obj)
    return super().has_delete_permission(request, obj)","def determine_delete_permission_based_on_creation_status(self, request, obj=None):
    if self.opts.auto_created:
        return self.has_view_permission(request, obj)
    return super().has_delete_permission(request, obj)",[]
./django/contrib/admin/options.py,has_view_permission,check_custom_model_view_or_change_permission,2141,2154,"def has_view_permission(self, request, obj=None):
    if self.opts.auto_created:
        opts = self.opts
        for field in opts.fields:
            if field.remote_field and field.remote_field.model != self.parent_model:
                opts = field.remote_field.model._meta
                break
        return request.user.has_perm('%s.%s' % (opts.app_label, get_permission_codename('view', opts))) or request.user.has_perm('%s.%s' % (opts.app_label, get_permission_codename('change', opts)))
    return super().has_view_permission(request)","def check_custom_model_view_or_change_permission(self, request, obj=None):
    if self.opts.auto_created:
        opts = self.opts
        for field in opts.fields:
            if field.remote_field and field.remote_field.model != self.parent_model:
                opts = field.remote_field.model._meta
                break
        return request.user.has_perm('%s.%s' % (opts.app_label, get_permission_codename('view', opts))) or request.user.has_perm('%s.%s' % (opts.app_label, get_permission_codename('change', opts)))
    return super().has_view_permission(request)","[{""var"": ""opts"", ""rename"": ""metadata_options""}, {""var"": ""field"", ""rename"": ""related_model_field""}]"
