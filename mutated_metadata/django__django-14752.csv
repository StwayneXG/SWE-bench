file,method_name,new_method_name,start_line,end_line,original_code,code,var
./django/contrib/admin/views/autocomplete.py,get,generate_json_search_results,12,33,"def get(self, request, *args, **kwargs):
    """"""
        Return a JsonResponse with search results of the form:
        {
            results: [{id: ""123"" text: ""foo""}],
            pagination: {more: true}
        }
        """"""
    self.term, self.model_admin, self.source_field, to_field_name = self.process_request(request)
    if not self.has_perm(request):
        raise PermissionDenied
    self.object_list = self.get_queryset()
    context = self.get_context_data()
    return JsonResponse({'results': [{'id': str(getattr(obj, to_field_name)), 'text': str(obj)} for obj in context['object_list']], 'pagination': {'more': context['page_obj'].has_next()}})","def generate_json_search_results(self, request, *args, **kwargs):
    """"""
        Return a JsonResponse with search results of the form:
        {
            results: [{id: ""123"" text: ""foo""}],
            pagination: {more: true}
        }
        """"""
    self.term, self.model_admin, self.source_field, to_field_name = self.process_request(request)
    if not self.has_perm(request):
        raise PermissionDenied
    self.object_list = self.get_queryset()
    context = self.get_context_data()
    return JsonResponse({'results': [{'id': str(getattr(obj, to_field_name)), 'text': str(obj)} for obj in context['object_list']], 'pagination': {'more': context['page_obj'].has_next()}})","[{""var"": ""context"", ""rename"": ""search_results_context""}, {""var"": ""to_field_name"", ""rename"": ""target_field_name""}, {""var"": ""obj"", ""rename"": ""search_result_item""}]"
./django/contrib/admin/views/autocomplete.py,get_paginator,retrieve_model_admin_paginator,35,37,"def get_paginator(self, *args, **kwargs):
    """"""Use the ModelAdmin's paginator.""""""
    return self.model_admin.get_paginator(self.request, *args, **kwargs)","def retrieve_model_admin_paginator(self, *args, **kwargs):
    """"""Use the ModelAdmin's paginator.""""""
    return self.model_admin.get_paginator(self.request, *args, **kwargs)",[]
./django/contrib/admin/views/autocomplete.py,get_queryset,retrieve_filtered_search_queryset,39,46,"def get_queryset(self):
    """"""Return queryset based on ModelAdmin.get_search_results().""""""
    qs = self.model_admin.get_queryset(self.request)
    qs = qs.complex_filter(self.source_field.get_limit_choices_to())
    qs, search_use_distinct = self.model_admin.get_search_results(self.request, qs, self.term)
    if search_use_distinct:
        qs = qs.distinct()
    return qs","def retrieve_filtered_search_queryset(self):
    """"""Return queryset based on ModelAdmin.get_search_results().""""""
    qs = self.model_admin.get_queryset(self.request)
    qs = qs.complex_filter(self.source_field.get_limit_choices_to())
    qs, search_use_distinct = self.model_admin.get_search_results(self.request, qs, self.term)
    if search_use_distinct:
        qs = qs.distinct()
    return qs","[{""var"": ""qs"", ""rename"": ""filtered_search_queryset""}, {""var"": ""search_use_distinct"", ""rename"": ""requires_distinct_results""}]"
