file,method_name,new_method_name,start_line,end_line,original_code,code,var
./django/core/paginator.py,validate_number,ensure_valid_1_based_page_number,37,52,"def validate_number(self, number):
    """"""Validate the given 1-based page number.""""""
    try:
        if isinstance(number, float) and (not number.is_integer()):
            raise ValueError
        number = int(number)
    except (TypeError, ValueError):
        raise PageNotAnInteger(_('That page number is not an integer'))
    if number < 1:
        raise EmptyPage(_('That page number is less than 1'))
    if number > self.num_pages:
        if number == 1 and self.allow_empty_first_page:
            pass
        else:
            raise EmptyPage(_('That page contains no results'))
    return number","def ensure_valid_1_based_page_number(self, number):
    """"""Validate the given 1-based page number.""""""
    try:
        if isinstance(number, float) and (not number.is_integer()):
            raise ValueError
        number = int(number)
    except (TypeError, ValueError):
        raise PageNotAnInteger(_('That page number is not an integer'))
    if number < 1:
        raise EmptyPage(_('That page number is less than 1'))
    if number > self.num_pages:
        if number == 1 and self.allow_empty_first_page:
            pass
        else:
            raise EmptyPage(_('That page contains no results'))
    return number",[]
