file,method_name,new_method_name,start_line,end_line,original_code,code,var
./xarray/core/merge.py,merge_attrs,combine_variable_attributes,495,526,"def merge_attrs(variable_attrs, combine_attrs):
    """"""Combine attributes from different variables according to combine_attrs""""""
    if not variable_attrs:
        return None
    if combine_attrs == 'drop':
        return {}
    elif combine_attrs == 'override':
        return variable_attrs[0]
    elif combine_attrs == 'no_conflicts':
        result = dict(variable_attrs[0])
        for attrs in variable_attrs[1:]:
            try:
                result = compat_dict_union(result, attrs)
            except ValueError:
                raise MergeError(""combine_attrs='no_conflicts', but some values are not the same. Merging %s with %s"" % (str(result), str(attrs)))
        return result
    elif combine_attrs == 'identical':
        result = dict(variable_attrs[0])
        for attrs in variable_attrs[1:]:
            if not dict_equiv(result, attrs):
                raise MergeError(""combine_attrs='identical', but attrs differ. First is %s , other is %s."" % (str(result), str(attrs)))
        return result
    else:
        raise ValueError('Unrecognised value for combine_attrs=%s' % combine_attrs)","def combine_variable_attributes(variable_attrs, combine_attrs):
    """"""Combine attributes from different variables according to combine_attrs""""""
    if not variable_attrs:
        return None
    if combine_attrs == 'drop':
        return {}
    elif combine_attrs == 'override':
        return variable_attrs[0]
    elif combine_attrs == 'no_conflicts':
        result = dict(variable_attrs[0])
        for attrs in variable_attrs[1:]:
            try:
                result = compat_dict_union(result, attrs)
            except ValueError:
                raise MergeError(""combine_attrs='no_conflicts', but some values are not the same. Merging %s with %s"" % (str(result), str(attrs)))
        return result
    elif combine_attrs == 'identical':
        result = dict(variable_attrs[0])
        for attrs in variable_attrs[1:]:
            if not dict_equiv(result, attrs):
                raise MergeError(""combine_attrs='identical', but attrs differ. First is %s , other is %s."" % (str(result), str(attrs)))
        return result
    else:
        raise ValueError('Unrecognised value for combine_attrs=%s' % combine_attrs)","[{""var"": ""result"", ""rename"": ""merged_attributes""}, {""var"": ""attrs"", ""rename"": ""variable_attributes""}]"
