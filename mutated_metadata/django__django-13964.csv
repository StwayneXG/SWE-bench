file,method_name,new_method_name,start_line,end_line,original_code,code,var
./django/db/models/base.py,_prepare_related_fields_for_save,_validate_and_sync_related_object_fields_before_save,911,943,"def _prepare_related_fields_for_save(self, operation_name):
    for field in self._meta.concrete_fields:
        if field.is_relation and field.is_cached(self):
            obj = getattr(self, field.name, None)
            if not obj:
                continue
            if obj.pk is None:
                if not field.remote_field.multiple:
                    field.remote_field.delete_cached_value(obj)
                raise ValueError(""%s() prohibited to prevent data loss due to unsaved related object '%s'."" % (operation_name, field.name))
            elif getattr(self, field.attname) is None:
                setattr(self, field.attname, obj.pk)
            if getattr(obj, field.target_field.attname) != getattr(self, field.attname):
                field.delete_cached_value(self)","def _validate_and_sync_related_object_fields_before_save(self, operation_name):
    for field in self._meta.concrete_fields:
        if field.is_relation and field.is_cached(self):
            obj = getattr(self, field.name, None)
            if not obj:
                continue
            if obj.pk is None:
                if not field.remote_field.multiple:
                    field.remote_field.delete_cached_value(obj)
                raise ValueError(""%s() prohibited to prevent data loss due to unsaved related object '%s'."" % (operation_name, field.name))
            elif getattr(self, field.attname) is None:
                setattr(self, field.attname, obj.pk)
            if getattr(obj, field.target_field.attname) != getattr(self, field.attname):
                field.delete_cached_value(self)","[{""var"": ""field"", ""rename"": ""related_concrete_field""}, {""var"": ""obj"", ""rename"": ""related_object""}]"
