file,method_name,new_method_name,start_line,end_line,original_code,code,var
./src/_pytest/setuponly.py,_show_fixture_action,display_fixture_lifecycle_action,46,74,"def _show_fixture_action(fixturedef, msg):
    config = fixturedef._fixturemanager.config
    capman = config.pluginmanager.getplugin('capturemanager')
    if capman:
        capman.suspend_global_capture()
    tw = config.get_terminal_writer()
    tw.line()
    tw.write(' ' * 2 * fixturedef.scopenum)
    tw.write('{step} {scope} {fixture}'.format(step=msg.ljust(8), scope=fixturedef.scope[0].upper(), fixture=fixturedef.argname))
    if msg == 'SETUP':
        deps = sorted((arg for arg in fixturedef.argnames if arg != 'request'))
        if deps:
            tw.write(' (fixtures used: {})'.format(', '.join(deps)))
    if hasattr(fixturedef, 'cached_param'):
        tw.write('[{}]'.format(fixturedef.cached_param))
    tw.flush()
    if capman:
        capman.resume_global_capture()","def display_fixture_lifecycle_action(fixturedef, msg):
    config = fixturedef._fixturemanager.config
    capman = config.pluginmanager.getplugin('capturemanager')
    if capman:
        capman.suspend_global_capture()
    tw = config.get_terminal_writer()
    tw.line()
    tw.write(' ' * 2 * fixturedef.scopenum)
    tw.write('{step} {scope} {fixture}'.format(step=msg.ljust(8), scope=fixturedef.scope[0].upper(), fixture=fixturedef.argname))
    if msg == 'SETUP':
        deps = sorted((arg for arg in fixturedef.argnames if arg != 'request'))
        if deps:
            tw.write(' (fixtures used: {})'.format(', '.join(deps)))
    if hasattr(fixturedef, 'cached_param'):
        tw.write('[{}]'.format(fixturedef.cached_param))
    tw.flush()
    if capman:
        capman.resume_global_capture()","[{""var"": ""arg"", ""rename"": ""dependent_fixture_args""}, {""var"": ""tw"", ""rename"": ""terminal_writer""}, {""var"": ""capman"", ""rename"": ""capture_manager""}, {""var"": ""config"", ""rename"": ""pytest_configuration""}, {""var"": ""deps"", ""rename"": ""fixture_dependencies""}]"
