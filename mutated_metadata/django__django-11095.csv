file,method_name,new_method_name,start_line,end_line,original_code,code,var
./django/contrib/admin/options.py,get_ordering,determine_field_ordering,330,334,"def get_ordering(self, request):
    """"""
        Hook for specifying field ordering.
        """"""
    return self.ordering or ()","def determine_field_ordering(self, request):
    """"""
        Hook for specifying field ordering.
        """"""
    return self.ordering or ()",[]
./django/contrib/admin/options.py,get_inline_instances,generate_filtered_inline_instances,583,596,"def get_inline_instances(self, request, obj=None):
    inline_instances = []
    for inline_class in self.inlines:
        inline = inline_class(self.model, self.admin_site)
        if request:
            if not (inline.has_view_or_change_permission(request, obj) or inline.has_add_permission(request, obj) or inline.has_delete_permission(request, obj)):
                continue
            if not inline.has_add_permission(request, obj):
                inline.max_num = 0
        inline_instances.append(inline)
    return inline_instances","def generate_filtered_inline_instances(self, request, obj=None):
    inline_instances = []
    for inline_class in self.inlines:
        inline = inline_class(self.model, self.admin_site)
        if request:
            if not (inline.has_view_or_change_permission(request, obj) or inline.has_add_permission(request, obj) or inline.has_delete_permission(request, obj)):
                continue
            if not inline.has_add_permission(request, obj):
                inline.max_num = 0
        inline_instances.append(inline)
    return inline_instances","[{""var"": ""inline"", ""rename"": ""inline_instance""}, {""var"": ""inline_instances"", ""rename"": ""configured_inline_admins""}, {""var"": ""inline_class"", ""rename"": ""inline_model_class""}]"
