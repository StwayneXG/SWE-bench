file,method_name,new_method_name,start_line,end_line,original_code,code,var
./xarray/core/indexing.py,__array__,get_array_values_by_level,1533,1537,"def __array__(self, dtype: DTypeLike=None) -> np.ndarray:
    if self.level is not None:
        return self.array.get_level_values(self.level).values
    else:
        return super().__array__(dtype)","def get_array_values_by_level(self, dtype: DTypeLike=None) -> np.ndarray:
    if self.level is not None:
        return self.array.get_level_values(self.level).values
    else:
        return super().__array__(dtype)",[]
./xarray/core/indexing.py,_convert_scalar,_convert_by_level_to_scalar,1539,1543,"def _convert_scalar(self, item):
    if isinstance(item, tuple) and self.level is not None:
        idx = tuple(self.array.names).index(self.level)
        item = item[idx]
    return super()._convert_scalar(item)","def _convert_by_level_to_scalar(self, item):
    if isinstance(item, tuple) and self.level is not None:
        idx = tuple(self.array.names).index(self.level)
        item = item[idx]
    return super()._convert_scalar(item)","[{""var"": ""idx"", ""rename"": ""level_index_in_names""}]"
